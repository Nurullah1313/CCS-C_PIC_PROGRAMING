CCS PCM C Compiler, Version 5.007, 61971               26-Eyl-19 12:23

               Filename:   C:\Users\NURULLAH\Desktop\ccs c örnek\matrix\main.lst

               ROM used:   273 words (3%)
                           Largest free fragment is 2048
               RAM used:   45 (12%) at main() level
                           51 (14%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   064
0003:  NOP
.................... #include <main.h> 
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
*
0020:  BCF    0A.0
0021:  BCF    0A.1
0022:  BCF    0A.2
0023:  ADDWF  02,F
0024:  GOTO   00A
0025:  GOTO   00E
0026:  GOTO   012
0027:  GOTO   016
0028:  GOTO   01A
....................  
.................... #list 
....................  
.................... #device ADC=8 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=8000000) 
0029:  MOVLW  4E
002A:  MOVWF  04
002B:  BCF    03.7
002C:  MOVF   00,W
002D:  BTFSC  03.2
002E:  GOTO   03C
002F:  MOVLW  02
0030:  MOVWF  78
0031:  CLRF   77
0032:  DECFSZ 77,F
0033:  GOTO   032
0034:  DECFSZ 78,F
0035:  GOTO   031
0036:  MOVLW  97
0037:  MOVWF  77
0038:  DECFSZ 77,F
0039:  GOTO   038
003A:  DECFSZ 00,F
003B:  GOTO   02F
003C:  RETURN
....................  
....................  
....................  
....................  
.................... int sutun(char a) 
.................... { 
....................    switch(a) 
*
0004:  MOVF   4E,W
0005:  ADDLW  FB
0006:  BTFSC  03.0
0007:  GOTO   01D
0008:  ADDLW  05
0009:  GOTO   020
....................    { 
....................    case 0:return(0x10);break; 
000A:  MOVLW  10
000B:  MOVWF  78
000C:  GOTO   01D
000D:  GOTO   01D
....................    case 1:return(0x08);break; 
000E:  MOVLW  08
000F:  MOVWF  78
0010:  GOTO   01D
0011:  GOTO   01D
....................    case 2:return(0x04);break; 
0012:  MOVLW  04
0013:  MOVWF  78
0014:  GOTO   01D
0015:  GOTO   01D
....................    case 3:return(0x02);break; 
0016:  MOVLW  02
0017:  MOVWF  78
0018:  GOTO   01D
0019:  GOTO   01D
....................    case 4:return(0x01);break; 
001A:  MOVLW  01
001B:  MOVWF  78
001C:  GOTO   01D
....................    } 
001D:  BCF    0A.3
001E:  BCF    0A.4
001F:  GOTO   04A (RETURN)
.................... } 
.................... void matris_karakter(char k[],char tekrar) 
.................... { 
....................    for(int i=0;i<=tekrar;i++) 
*
003D:  CLRF   4C
003E:  MOVF   4C,W
003F:  SUBWF  4B,W
0040:  BTFSS  03.0
0041:  GOTO   063
....................    { 
....................       for(int j=0;j<=5;j++) 
0042:  CLRF   4D
0043:  MOVF   4D,W
0044:  SUBLW  05
0045:  BTFSS  03.0
0046:  GOTO   061
....................       { 
....................          output_b(sutun(j)); 
0047:  MOVF   4D,W
0048:  MOVWF  4E
0049:  GOTO   004
004A:  BSF    03.5
004B:  CLRF   06
004C:  BCF    03.5
004D:  MOVF   78,W
004E:  MOVWF  06
....................          output_d(k[j]); 
004F:  MOVF   4D,W
0050:  ADDWF  49,W
0051:  MOVWF  04
0052:  BCF    03.7
0053:  BTFSC  4A.0
0054:  BSF    03.7
0055:  MOVF   00,W
0056:  MOVWF  4E
0057:  BSF    03.5
0058:  CLRF   08
0059:  BCF    03.5
005A:  MOVF   4E,W
005B:  MOVWF  08
....................       delay_ms(5); 
005C:  MOVLW  05
005D:  MOVWF  4E
005E:  CALL   029
005F:  INCF   4D,F
0060:  GOTO   043
....................       } 
0061:  INCF   4C,F
0062:  GOTO   03E
....................     
....................    } 
0063:  RETURN
....................  
.................... } 
....................  
....................  
.................... void main() 
0064:  BSF    03.5
0065:  BSF    1F.0
0066:  BSF    1F.1
0067:  BSF    1F.2
0068:  BCF    1F.3
0069:  MOVLW  07
006A:  MOVWF  1C
006B:  BCF    03.7
006C:  MOVLW  1F
006D:  ANDWF  03,F
.................... { 
....................     int A[]={0x03,0x75,0x76,0x75,0x03}; 
006E:  MOVLW  03
006F:  BCF    03.5
0070:  MOVWF  21
0071:  MOVLW  75
0072:  MOVWF  22
0073:  MOVLW  76
0074:  MOVWF  23
0075:  MOVLW  75
0076:  MOVWF  24
0077:  MOVLW  03
0078:  MOVWF  25
....................     int B[]={0x00,0x36,0x36,0x36,0x49}; 
0079:  CLRF   26
007A:  MOVLW  36
007B:  MOVWF  27
007C:  MOVWF  28
007D:  MOVWF  29
007E:  MOVLW  49
007F:  MOVWF  2A
....................     int C[]={0x41,0x3e,0x3e,0x3e,0x5d}; 
0080:  MOVLW  41
0081:  MOVWF  2B
0082:  MOVLW  3E
0083:  MOVWF  2C
0084:  MOVWF  2D
0085:  MOVWF  2E
0086:  MOVLW  5D
0087:  MOVWF  2F
....................     int D[]={0x00,0x3e,0x3e,0x3e,0x41}; 
0088:  CLRF   30
0089:  MOVLW  3E
008A:  MOVWF  31
008B:  MOVWF  32
008C:  MOVWF  33
008D:  MOVLW  41
008E:  MOVWF  34
....................     int E[]={0x00,0xb6,0xb6,0xb6,0xbe}; 
008F:  CLRF   35
0090:  MOVLW  B6
0091:  MOVWF  36
0092:  MOVWF  37
0093:  MOVWF  38
0094:  MOVLW  BE
0095:  MOVWF  39
....................     int arti[]={0x77,0x77,0x41,0x77,0x77}; 
0096:  MOVLW  77
0097:  MOVWF  3A
0098:  MOVWF  3B
0099:  MOVLW  41
009A:  MOVWF  3C
009B:  MOVLW  77
009C:  MOVWF  3D
009D:  MOVWF  3E
....................     int carpi[]={0x5d,0x6b,0x77,0x6b,0x5d}; 
009E:  MOVLW  5D
009F:  MOVWF  3F
00A0:  MOVLW  6B
00A1:  MOVWF  40
00A2:  MOVLW  77
00A3:  MOVWF  41
00A4:  MOVLW  6B
00A5:  MOVWF  42
00A6:  MOVLW  5D
00A7:  MOVWF  43
....................     int cift_ok[]={0x6b,0x5d,0x00,0x5d,0x6b}; 
00A8:  MOVLW  6B
00A9:  MOVWF  44
00AA:  MOVLW  5D
00AB:  MOVWF  45
00AC:  CLRF   46
00AD:  MOVWF  47
00AE:  MOVLW  6B
00AF:  MOVWF  48
....................    setup_psp(psp_disabled); 
00B0:  BSF    03.5
00B1:  BCF    09.4
....................    setup_ccp1(ccp_off); 
00B2:  MOVLW  F0
00B3:  BCF    03.5
00B4:  ANDWF  17,F
....................    setup_ccp2(ccp_off); 
00B5:  ANDWF  1D,F
....................    setup_timer_1(t1_disabled); 
00B6:  CLRF   10
....................    setup_timer_2(t2_disabled,0,1); 
00B7:  MOVLW  00
00B8:  MOVWF  78
00B9:  MOVWF  12
00BA:  MOVLW  00
00BB:  BSF    03.5
00BC:  MOVWF  12
....................    setup_adc_ports(no_analogs); 
00BD:  BSF    1F.0
00BE:  BSF    1F.1
00BF:  BSF    1F.2
00C0:  BCF    1F.3
....................    setup_adc(adc_off); 
00C1:  BCF    03.5
00C2:  BCF    1F.0
....................    set_tris_b(0x00); 
00C3:  BSF    03.5
00C4:  MOVWF  06
....................    set_tris_d(0x00); 
00C5:  MOVWF  08
.................... while(TRUE) 
....................    { 
....................         matris_karakter(A,25); 
00C6:  BCF    03.5
00C7:  CLRF   4A
00C8:  MOVLW  21
00C9:  MOVWF  49
00CA:  MOVLW  19
00CB:  MOVWF  4B
00CC:  CALL   03D
....................         delay_ms(100); 
00CD:  MOVLW  64
00CE:  MOVWF  4E
00CF:  CALL   029
....................         matris_karakter(B,25); 
00D0:  CLRF   4A
00D1:  MOVLW  26
00D2:  MOVWF  49
00D3:  MOVLW  19
00D4:  MOVWF  4B
00D5:  CALL   03D
....................         delay_ms(100); 
00D6:  MOVLW  64
00D7:  MOVWF  4E
00D8:  CALL   029
....................         matris_karakter(C,25); 
00D9:  CLRF   4A
00DA:  MOVLW  2B
00DB:  MOVWF  49
00DC:  MOVLW  19
00DD:  MOVWF  4B
00DE:  CALL   03D
....................         delay_ms(100); 
00DF:  MOVLW  64
00E0:  MOVWF  4E
00E1:  CALL   029
....................         matris_karakter(D,25); 
00E2:  CLRF   4A
00E3:  MOVLW  30
00E4:  MOVWF  49
00E5:  MOVLW  19
00E6:  MOVWF  4B
00E7:  CALL   03D
....................         delay_ms(100); 
00E8:  MOVLW  64
00E9:  MOVWF  4E
00EA:  CALL   029
....................         matris_karakter(E,25); 
00EB:  CLRF   4A
00EC:  MOVLW  35
00ED:  MOVWF  49
00EE:  MOVLW  19
00EF:  MOVWF  4B
00F0:  CALL   03D
....................         delay_ms(100); 
00F1:  MOVLW  64
00F2:  MOVWF  4E
00F3:  CALL   029
....................         matris_karakter(arti,25); 
00F4:  CLRF   4A
00F5:  MOVLW  3A
00F6:  MOVWF  49
00F7:  MOVLW  19
00F8:  MOVWF  4B
00F9:  CALL   03D
....................         delay_ms(100); 
00FA:  MOVLW  64
00FB:  MOVWF  4E
00FC:  CALL   029
....................         matris_karakter(carpi,25); 
00FD:  CLRF   4A
00FE:  MOVLW  3F
00FF:  MOVWF  49
0100:  MOVLW  19
0101:  MOVWF  4B
0102:  CALL   03D
....................         delay_ms(100);         
0103:  MOVLW  64
0104:  MOVWF  4E
0105:  CALL   029
....................         matris_karakter(cift_ok,25); 
0106:  CLRF   4A
0107:  MOVLW  44
0108:  MOVWF  49
0109:  MOVLW  19
010A:  MOVWF  4B
010B:  CALL   03D
....................         delay_ms(100);       
010C:  MOVLW  64
010D:  MOVWF  4E
010E:  CALL   029
010F:  GOTO   0C7
....................          
....................     
....................    } 
.................... } 
0110:  SLEEP

Configuration Fuses:
   Word  1: 3F32   HS NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
