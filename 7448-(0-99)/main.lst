CCS PCM C Compiler, Version 5.007, 61971               22-Eyl-19 16:25

               Filename:   C:\Users\NURULLAH\Desktop\ccs c örnek\7448-(0-99)\main.lst

               ROM used:   288 words (4%)
                           Largest free fragment is 2048
               RAM used:   8 (2%) at main() level
                           12 (3%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   03B
0003:  NOP
.................... #include <main.h> 
.................... #include <16F877.h> 
.................... //////// Standard Header file for the PIC16F877 device //////////////// 
.................... #device PIC16F877 
0004:  BCF    0A.0
0005:  BCF    0A.1
0006:  BCF    0A.2
0007:  ADDWF  02,F
0008:  RETLW  00
0009:  RETLW  01
000A:  RETLW  02
000B:  RETLW  03
000C:  RETLW  04
000D:  RETLW  05
000E:  RETLW  06
000F:  RETLW  07
0010:  RETLW  08
0011:  RETLW  09
*
0026:  MOVF   25,W
0027:  CLRF   78
0028:  SUBWF  24,W
0029:  BTFSC  03.0
002A:  GOTO   02E
002B:  MOVF   24,W
002C:  MOVWF  77
002D:  GOTO   03A
002E:  CLRF   77
002F:  MOVLW  08
0030:  MOVWF  26
0031:  RLF    24,F
0032:  RLF    77,F
0033:  MOVF   25,W
0034:  SUBWF  77,W
0035:  BTFSC  03.0
0036:  MOVWF  77
0037:  RLF    78,F
0038:  DECFSZ 26,F
0039:  GOTO   031
003A:  RETURN
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=20000000) 
*
0012:  MOVLW  24
0013:  MOVWF  04
0014:  BCF    03.7
0015:  MOVF   00,W
0016:  BTFSC  03.2
0017:  GOTO   025
0018:  MOVLW  06
0019:  MOVWF  78
001A:  CLRF   77
001B:  DECFSZ 77,F
001C:  GOTO   01B
001D:  DECFSZ 78,F
001E:  GOTO   01A
001F:  MOVLW  7B
0020:  MOVWF  77
0021:  DECFSZ 77,F
0022:  GOTO   021
0023:  DECFSZ 00,F
0024:  GOTO   018
0025:  RETURN
....................  
....................  
.................... #define seg_1 pin_c0 
.................... #define seg_2 pin_d0 
.................... #define art pin_a0 
.................... #define azlt pin_a1 
.................... void main() 
*
003B:  MOVLW  FF
003C:  MOVWF  20
003D:  BSF    03.5
003E:  BSF    1F.0
003F:  BSF    1F.1
0040:  BSF    1F.2
0041:  BCF    1F.3
0042:  BCF    03.7
0043:  MOVLW  1F
0044:  ANDWF  03,F
.................... { 
.................... set_tris_a(0x03); 
0045:  MOVLW  03
0046:  MOVWF  05
.................... set_tris_b(0x00); 
0047:  MOVLW  00
0048:  MOVWF  06
.................... setup_psp(psp_disabled); 
0049:  BCF    09.4
.................... setup_ccp1(ccp_off); 
004A:  MOVLW  F0
004B:  BCF    03.5
004C:  ANDWF  17,F
.................... setup_ccp2(ccp_off); 
004D:  ANDWF  1D,F
.................... setup_timer_1(t1_disabled); 
004E:  CLRF   10
.................... setup_timer_2(t2_disabled,0,1); 
004F:  MOVLW  00
0050:  MOVWF  78
0051:  MOVWF  12
0052:  MOVLW  00
0053:  BSF    03.5
0054:  MOVWF  12
.................... setup_adc_ports(no_analogs); 
0055:  BSF    1F.0
0056:  BSF    1F.1
0057:  BSF    1F.2
0058:  BCF    1F.3
.................... setup_adc(adc_off); 
0059:  BCF    03.5
005A:  BCF    1F.0
.................... const int dizi[10]={0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09}; 
.................... char sayi=0,birler=0,onlar=0; 
005B:  CLRF   21
005C:  CLRF   22
005D:  CLRF   23
....................  
.................... while(TRUE) 
.................... { 
....................    output_high(seg_1); 
005E:  BCF    20.0
005F:  MOVF   20,W
0060:  BSF    03.5
0061:  MOVWF  07
0062:  BCF    03.5
0063:  BSF    07.0
....................    output_low(seg_2); 
0064:  BSF    03.5
0065:  BCF    08.0
0066:  BCF    03.5
0067:  BCF    08.0
....................    output_b(dizi[birler]); 
0068:  MOVF   22,W
0069:  CALL   004
006A:  MOVWF  24
006B:  BSF    03.5
006C:  CLRF   06
006D:  BCF    03.5
006E:  MOVF   24,W
006F:  MOVWF  06
....................    delay_ms(7); 
0070:  MOVLW  07
0071:  MOVWF  24
0072:  CALL   012
....................    output_low(seg_1); 
0073:  BCF    20.0
0074:  MOVF   20,W
0075:  BSF    03.5
0076:  MOVWF  07
0077:  BCF    03.5
0078:  BCF    07.0
....................    output_high(seg_2); 
0079:  BSF    03.5
007A:  BCF    08.0
007B:  BCF    03.5
007C:  BSF    08.0
....................    output_b(dizi[onlar]); 
007D:  MOVF   23,W
007E:  CALL   004
007F:  MOVWF  24
0080:  BSF    03.5
0081:  CLRF   06
0082:  BCF    03.5
0083:  MOVF   24,W
0084:  MOVWF  06
....................    delay_ms(7); 
0085:  MOVLW  07
0086:  MOVWF  24
0087:  CALL   012
....................     
....................    if(input(art)==0) 
0088:  BSF    03.5
0089:  BSF    05.0
008A:  BCF    03.5
008B:  BTFSC  05.0
008C:  GOTO   0CB
....................    { 
....................    sayi++; 
008D:  INCF   21,F
....................    birler=sayi%10; 
008E:  MOVF   21,W
008F:  MOVWF  24
0090:  MOVLW  0A
0091:  MOVWF  25
0092:  CALL   026
0093:  MOVF   77,W
0094:  MOVWF  22
....................    onlar=sayi/10; 
0095:  MOVF   21,W
0096:  MOVWF  24
0097:  MOVLW  0A
0098:  MOVWF  25
0099:  CALL   026
009A:  MOVF   78,W
009B:  MOVWF  23
....................    while(input(art)==0); 
009C:  BSF    03.5
009D:  BSF    05.0
009E:  BCF    03.5
009F:  BTFSS  05.0
00A0:  GOTO   09C
....................    { 
....................    output_high(seg_1); 
00A1:  BCF    20.0
00A2:  MOVF   20,W
00A3:  BSF    03.5
00A4:  MOVWF  07
00A5:  BCF    03.5
00A6:  BSF    07.0
....................    output_low(seg_2); 
00A7:  BSF    03.5
00A8:  BCF    08.0
00A9:  BCF    03.5
00AA:  BCF    08.0
....................    output_b(dizi[birler]); 
00AB:  MOVF   22,W
00AC:  CALL   004
00AD:  MOVWF  24
00AE:  BSF    03.5
00AF:  CLRF   06
00B0:  BCF    03.5
00B1:  MOVF   24,W
00B2:  MOVWF  06
....................    delay_ms(7); 
00B3:  MOVLW  07
00B4:  MOVWF  24
00B5:  CALL   012
....................    output_low(seg_1); 
00B6:  BCF    20.0
00B7:  MOVF   20,W
00B8:  BSF    03.5
00B9:  MOVWF  07
00BA:  BCF    03.5
00BB:  BCF    07.0
....................    output_high(seg_2); 
00BC:  BSF    03.5
00BD:  BCF    08.0
00BE:  BCF    03.5
00BF:  BSF    08.0
....................    output_b(dizi[onlar]); 
00C0:  MOVF   23,W
00C1:  CALL   004
00C2:  MOVWF  24
00C3:  BSF    03.5
00C4:  CLRF   06
00C5:  BCF    03.5
00C6:  MOVF   24,W
00C7:  MOVWF  06
....................    delay_ms(7); 
00C8:  MOVLW  07
00C9:  MOVWF  24
00CA:  CALL   012
....................    }} 
....................  
....................  
....................  
....................       if((input(azlt)==0)& sayi!=0) 
00CB:  BSF    03.5
00CC:  BSF    05.1
00CD:  MOVLW  00
00CE:  BCF    03.5
00CF:  BTFSS  05.1
00D0:  MOVLW  01
00D1:  MOVWF  25
00D2:  MOVF   21,F
00D3:  BTFSS  03.2
00D4:  GOTO   0D7
00D5:  MOVLW  00
00D6:  GOTO   0D8
00D7:  MOVLW  01
00D8:  ANDWF  25,W
00D9:  BTFSC  03.2
00DA:  GOTO   11A
....................       { 
....................       sayi--; 
00DB:  DECF   21,F
....................       birler=sayi%10; 
00DC:  MOVF   21,W
00DD:  MOVWF  24
00DE:  MOVLW  0A
00DF:  MOVWF  25
00E0:  CALL   026
00E1:  MOVF   77,W
00E2:  MOVWF  22
....................       onlar=sayi/10; 
00E3:  MOVF   21,W
00E4:  MOVWF  24
00E5:  MOVLW  0A
00E6:  MOVWF  25
00E7:  CALL   026
00E8:  MOVF   78,W
00E9:  MOVWF  23
....................       while(input(azlt)==0) 
00EA:  BSF    03.5
00EB:  BSF    05.1
00EC:  BCF    03.5
00ED:  BTFSC  05.1
00EE:  GOTO   11A
....................       { 
....................       output_high(seg_1); 
00EF:  BCF    20.0
00F0:  MOVF   20,W
00F1:  BSF    03.5
00F2:  MOVWF  07
00F3:  BCF    03.5
00F4:  BSF    07.0
....................    output_low(seg_2); 
00F5:  BSF    03.5
00F6:  BCF    08.0
00F7:  BCF    03.5
00F8:  BCF    08.0
....................    output_b(dizi[birler]); 
00F9:  MOVF   22,W
00FA:  CALL   004
00FB:  MOVWF  24
00FC:  BSF    03.5
00FD:  CLRF   06
00FE:  BCF    03.5
00FF:  MOVF   24,W
0100:  MOVWF  06
....................    delay_ms(7); 
0101:  MOVLW  07
0102:  MOVWF  24
0103:  CALL   012
....................    output_low(seg_1); 
0104:  BCF    20.0
0105:  MOVF   20,W
0106:  BSF    03.5
0107:  MOVWF  07
0108:  BCF    03.5
0109:  BCF    07.0
....................    output_high(seg_2); 
010A:  BSF    03.5
010B:  BCF    08.0
010C:  BCF    03.5
010D:  BSF    08.0
....................    output_b(dizi[onlar]); 
010E:  MOVF   23,W
010F:  CALL   004
0110:  MOVWF  24
0111:  BSF    03.5
0112:  CLRF   06
0113:  BCF    03.5
0114:  MOVF   24,W
0115:  MOVWF  06
....................    delay_ms(7); 
0116:  MOVLW  07
0117:  MOVWF  24
0118:  CALL   012
0119:  GOTO   0EA
....................       } 
....................       } 
....................       else{ 
....................           
....................       } 
....................       if(sayi==100) 
011A:  MOVF   21,W
011B:  SUBLW  64
011C:  BTFSC  03.2
....................       { 
....................       sayi=0; 
011D:  CLRF   21
....................        
....................       } 
011E:  GOTO   05E
....................  
.................... } 
....................  
.................... } 
....................  
011F:  SLEEP
....................  

Configuration Fuses:
   Word  1: 3F32   HS NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
